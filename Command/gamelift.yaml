AWSTemplateFormatVersion: '2010-09-09'
Description: BatsToi Server GameLift Resources
Parameters:
  BuildId:
    Type: String
    Description: The build version identifier
  BackendStackName:
    Type: String
    Description: The name of the backend stack
    Default: batstoi-serverless
Resources:
  Queue:
    Type: AWS::GameLift::GameSessionQueue
    Properties:
      Name: BatsToiSessionQueue
      TimeoutInSeconds: 50
      Destinations:
        - DestinationArn: !Join
            - ''
            - - 'arn:aws:gamelift:'
              - !Ref AWS::Region
              - '::alias/'
              - !Ref Alias
        - DestinationArn: !Join
            - ''
            - - 'arn:aws:gamelift:'
              - !Ref AWS::Region
              - '::fleet/'
              - !Ref AnyWhereFleet
      PlayerLatencyPolicies:
        - MaximumIndividualPlayerLatencyMilliseconds: 80
          PolicyDurationSeconds: 3
        - MaximumIndividualPlayerLatencyMilliseconds: 1000
  MatchmakingRuleSet:
    Type: AWS::GameLift::MatchmakingRuleSet
    Properties:
      Name: BatsToiGameLiftRuleSet
      RuleSetBody: !Sub |
        {
            "name": "simplerule",
            "ruleLanguageVersion": "1.0",
            "playerAttributes": [{
                "name": "skill",
                "type": "number",
                "default": 10
            }],
            "teams": [{
                "name": "versus",
                "maxPlayers": 2,
                "minPlayers": 1
            }],
            "rules": [{
                "name": "FairSkill",
                "description": "The average skill of players is within 10 points from the average skill of all players in the match",
                "type": "distance",
                // get skill value for each player
                "measurements": [ "teams[versus].players.attributes[skill]" ],
                // get skill values for all players and average to produce an overall average
                "referenceValue": "avg(teams[versus].players.attributes[skill])",
                "maxDistance": 10
            },{
              "name": "FastConnection",
              "description": "Prefer matches with fast player connections first",
              "type": "latency",
              "maxLatency": 80
            }],
            "expansions": [{
                  "target": "rules[FastConnection].maxLatency",
                  "steps": [{
                      "waitTimeSeconds": 5,
                      "value": 1000
                }]
            }]
        }
  MatchMakingConfiguration:
    Type: AWS::GameLift::MatchmakingConfiguration
    Properties:
      Name: BatsToiGameConfiguration
      AcceptanceRequired: false
      AdditionalPlayerCount: 0
      RequestTimeoutSeconds: 250
      BackfillMode: AUTOMATIC
      Description: A basic sns configuration for BatsToi
      GameProperties:
        - Key: gamemode
          Value: classic
      GameSessionQueueArns:
        - !GetAtt Queue.Arn
      RuleSetName: !Ref MatchmakingRuleSet
      NotificationTarget: !ImportValue
        Fn::Sub: ${BackendStackName}-MatchmakingEventsSNSTopic
  Fleet:
    Type: AWS::GameLift::Fleet
    Properties:
      Name: BatsToiFleet
      Description: BatsToi Fleet
      Locations:
        - Location: !Ref AWS::Region
          LocationCapacity:
            DesiredEC2Instances: 1
            MaxSize: 4
            MinSize: 1
      BuildId: !Ref BuildId
      RuntimeConfiguration:
        GameSessionActivationTimeoutSeconds: 300
        ServerProcesses:
          - ConcurrentExecutions: 1
            LaunchPath: C:\game\BatsToiSupreme_Real\Binaries\Win64\BatsToiSupreme_RealServer.exe
            Parameters: '-AbsLog=c:\game\logs\game-server-7777.log -Port=7777'
          - ConcurrentExecutions: 1
            LaunchPath: C:\game\BatsToiSupreme_Real\Binaries\Win64\BatsToiSupreme_RealServer.exe
            Parameters: '-AbsLog=c:\game\logs\game-server-7778.log -Port=7778'
          - ConcurrentExecutions: 1
            LaunchPath: C:\game\BatsToiSupreme_Real\Binaries\Win64\BatsToiSupreme_RealServer.exe
            Parameters: '-AbsLog=c:\game\logs\game-server-7779.log -Port=7779'
      EC2InstanceType: m5.large
      FleetType: ON_DEMAND
      NewGameSessionProtectionPolicy: NoProtection
      EC2InboundPermissions:
        - FromPort: 7777
          ToPort: 8777
          IpRange: 0.0.0.0/0
          Protocol: UDP
      ScalingPolicies:
        - Name: BatsToiFleetScalingPolicy
          MetricName: PercentAvailableGameSessions
          PolicyType: TargetBased
          TargetConfiguration:
            TargetValue: 50
  CustomLocation:
    Type: AWS::GameLift::Location
    Properties:
      LocationName: custom-local-1
  AnyWhereFleet:
    Type: AWS::GameLift::Fleet
    Properties:
      ComputeType: ANYWHERE
      Name: BatsToiAnyWhereFleet
      Locations:
        - Location: !Ref CustomLocation
      AnywhereConfiguration:
        Cost: '0.0'
  Alias:
    Type: AWS::GameLift::Alias
    Properties:
      Name: BatsToiGameServerAlias
      Description: An alias routing traffic to the fleet
      RoutingStrategy:
        Type: SIMPLE
        FleetId: !Ref Fleet
Outputs:
  FleetID:
    Description: The ID of the created GameLift Fleet
    Value: !Ref Fleet
    Export:
      Name: !Sub ${AWS::StackName}-FleetID
  AnyWhereFleetID:
    Description: The ID of the created GameLift Fleet
    Value: !Ref AnyWhereFleet
    Export:
      Name: !Sub ${AWS::StackName}-AnywhereFleetID